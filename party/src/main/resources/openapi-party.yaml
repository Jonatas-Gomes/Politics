openapi: 3.0.1
info:
  title: Microservice Party
  description: API to register and manage parties
  version: 0.0.1
  contact:
    name: Dev
    email: jonata.gomes2014@hotmail.com
externalDocs:
  description: Documentation in GitHub
  url: https://github.com/Jonatas-Gomes/Politics
  
servers: 
- url: http://localhost:8081

paths:
  /parties:
    get:
      summary: Returns all parties
      parameters: 
        - name: ideology
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Ideology'
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
             
          
      responses:
        200:
          description: OK!
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/PageableResponse'
        400:
          $ref: '#/components/responses/Response400'
    
    post:
      summary: Create new party
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartyDTO'
        required: true          
      
      responses:
        201:
          description: created!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyResponse'
        400:
          $ref: '#/components/responses/Response400'
          
  /parties/{id}:
    put:
      summary: Update party
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: p410610
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartyDTO'
      responses:
        200:
          $ref: '#/components/responses/Response200'
        400:
          $ref: '#/components/responses/Response400'
    
    get:
      summary: Find one party
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: p410610
      
      responses:
        200:
          $ref: '#/components/responses/Response200'
        400:
          $ref: '#/components/responses/Response400'
          
    delete:
      summary: delete one party
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: p410610
      responses:
        204:
          description: No Content
        400:
          $ref: '#/components/responses/Response400'
  /parties/associates/{idParty}:
    post:
      x-internal: true
      summary: Bind Associate
      description: This endpoint should only be used with openfeign
      parameters:
        - name: idParty
          in: path
          required: true
          schema:
            type: string
            example: p410610
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Associate'
      responses:
        200:
          $ref: '#/components/responses/Response200'
        400:
          $ref: '#/components/responses/Response400'
    # hidden
  /parties/{id}/associates:
    get:
      summary: List all associates of a party
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: p410610
      responses:
        200:
          description: OK!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssociatesResponse'
          
components:
  schemas:
    Ideology:
      type: string
      enum:
        - Right
        - Center
        - Left
   
    PartyDTO:
      type: object
      properties:
        partyName:
          type: string
          example: Partido Verde
        acronym:
          type: string
          example: PV
        ideology:
          $ref: '#/components/schemas/Ideology'
        foundationDate:
          type: string
          format: date
          example: 1988-04-27
    
    Party:
      type: object
      properties:
        idParty:
          type: string
          example: p410610
        partyName:
          type: string
          example: Partido Verde
        acronym:
          type: string
          example: PV
        ideology:
          $ref: '#/components/schemas/Ideology'
          example: Right
        foundationDate:
          type: string
          format: date
          example: 1988-04-27
      
    PartyResponse:
      type: object
      properties:
        idParty:
          type: string
          example: p410610
        partyName:
          type: string
          example: Partido Verde
        acronym:
          type: string
          example: PV
        ideology:
          $ref: '#/components/schemas/Ideology'
          example: Right
        foundationDate:
          type: string
          format: date
          example: 1988-04-27
    
    PageableResponse:
      type: object
      properties:
        numberOfElements:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        parties:
          type: array
          items:
            $ref: '#/components/schemas/Party'
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
          default: 0
        size:
          minimum: 1
          type: integer
          format: int32
          default: 20
        sort:
          type: array
          items:
            type: string


    AssociateResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        fullName: 
          type: string
          example: Ednaldo Pereira
        politicalOffice:
          $ref: '#/components/schemas/PoliticalOffice'
          example: President
        birthday:
          type: string
          format: date
          example: 1988-04-27
        sex:
          $ref: '#/components/schemas/Sex'
    Associate:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        fullName: 
          type: string
          example: Ednaldo Pereira
        politicalOffice:
          $ref: '#/components/schemas/PoliticalOffice'
          example: President
        birthday:
          type: string
          format: date
          example: 1988-04-27
        sex:
          $ref: '#/components/schemas/Sex'
          example: Male
          
    Sex:
      type: string
      enum:
        - Male
        - Female
    PoliticalOffice:
      type: string
      enum:
        - Alderman
        - Mayor
        - State_Deputy
        - Federal_Deputy
        - Senator
        - Governor
        - President
        - None
    ListAssociatesResponse:
      type: array
      items:
        $ref: '#/components/schemas/AssociateResponse'
    ErrorMessage:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        message:
          type: string
          example: Party with id not found
    ExceptionValidResponse:
      type: object
      properties:
        field:
          type: string
          example: partyName
        error:
          type: string
          example: This field cannot be null
    ListExceptionValidResponse:
      type: array
      items:
        $ref: '#/components/schemas/ExceptionValidResponse'
  
  responses:
    Response400:
      description: BeanValidation | RequestException
      content:
        application/json:
          schema:
            oneOf:
              -  $ref: '#/components/schemas/ErrorMessage'
              -  $ref: '#/components/schemas/ListExceptionValidResponse'
    
    Response200:
      description: OK!
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyResponse'
  

                
            
    
        
      
  